<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>